<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>